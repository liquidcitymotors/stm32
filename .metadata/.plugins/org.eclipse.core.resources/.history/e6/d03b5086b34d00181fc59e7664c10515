#include "stm32f3xx_hal.h"
#include "stm32f3xx.h"
#include "stm32f3xx_it.h"

uint32_t dacALevel;
uint32_t dacBLevel;

enum {
	DAC_GATE_HIGH,
	DAC_GATE_LOW,
	DAC_EXECUTE,
};

void dacAHigh(int event) {
	switch (event) {
		case DAC_EXECUTE:
			((*(volatile uint32_t *) DAC1_ADDR) = 4095);
			break;
		case DAC_GATE_LOW:
			dacALevel = 4095;
			manageADac = dacAFall;
			break;

	}
}
void dacALow(void){
	((*(volatile uint32_t *) DAC1_ADDR) = 0);
}

void dacBHigh(void) {
	((*(volatile uint32_t *) DAC2_ADDR) = 4095);
}
void dacBLow(void){
	((*(volatile uint32_t *) DAC2_ADDR) = 0);
}

void dacARise(void){
	dacALevel = dacALevel++;
	if (dacALevel >= 4095) {
		dacALevel = 4095;
		manageADac = dacAHigh;
	}
	((*(volatile uint32_t *) DAC1_ADDR) = dacALevel);
}
void dacAFall(void){
	dacALevel = dacALevel--;
	if (dacALevel <= 0) {
		dacALevel = 0;
		manageADac = dacALow;
	}
	((*(volatile uint32_t *) DAC1_ADDR) = dacALevel);
}

void dacBRise(void){
	dacBLevel++;
	if (dacBLevel >= 4095) {
		dacBLevel = 4095;
		manageBDac = dacBHigh;
	}
	((*(volatile uint32_t *) DAC2_ADDR) = dacBLevel);
}
void dacBFall(void){
	dacBLevel--;
	if (dacBLevel <= 0) {
		dacBLevel = 0;
		manageBDac = dacBLow;
	}
	((*(volatile uint32_t *) DAC2_ADDR) = dacBLevel);
}

